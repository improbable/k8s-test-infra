# generated by gen-jobs.sh, do not edit manually

presubmits:
  kubernetes-csi/cluster-driver-registrar:
  - name: pull-sig-storage-cluster-driver-registrar-kubernetes-1-13
    # Experimental job, explicitly needs to be started with /test.
    always_run: false
    decorate: true
    skip_report: false
    skip_branches: ["^(release-1.0)$"]
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      # We need this image because it has Docker in Docker and go.
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190315-49d62eb51-master
        command:
        - runner.sh
        args:
        - ./.prow.sh
        env:
        # We pick some version for which there are pre-built images for kind.
        # Update only when the newer version is known to not cause issues,
        # otherwise presubmit jobs may start to fail for reasons that are
        # unrelated to the PR.
        #
        # See ci-kubernetes-csi-stable-on-kubernetes-1-13 for testing on the
        # latest Kubernetes 1.13.x.
        - name: CSI_PROW_KUBERNETES_VERSION
          value: "1.13.3"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 2000m
  - name: pull-sig-storage-cluster-driver-registrar-kubernetes-master
    # Experimental job, explicitly needs to be started with /test.
    always_run: false
    decorate: true
    skip_report: false
    labels:
      preset-service-account: "true"
      preset-dind-enabled: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-kind-volume-mounts: "true"
    spec:
      containers:
      # We need this image because it has Docker in Docker and go.
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20190315-49d62eb51-master
        command:
        - runner.sh
        args:
        - ./.prow.sh
        env:
        - name: CSI_PROW_KUBERNETES_VERSION
          value: "latest"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      resources:
        requests:
          # these are both a bit below peak usage during build
          # this is mostly for building kubernetes
          memory: "9000Mi"
          # during the tests more like 3-20m is used
          cpu: 2000m
