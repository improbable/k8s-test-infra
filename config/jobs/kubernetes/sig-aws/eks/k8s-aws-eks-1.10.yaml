
presets:
- env:
  # URL to download the latest 'aws-k8s-tester' release
  - name: AWS_K8S_TESTER_EKS_AWS_K8S_TESTER_DOWNLOAD_URL
    value: https://github.com/aws/aws-k8s-tester/releases/download/0.1.4/aws-k8s-tester-0.1.4-linux-amd64
  - name: AWS_K8S_TESTER_EKS_AWS_K8S_TESTER_DOWNLOAD_PATH
    value: /tmp/aws-k8s-tester/aws-k8s-tester
  # URL to download 'kubectl', required for 'kubectl' calls to EKS
  # TODO: use upstream 'kubectl'
  - name: AWS_K8S_TESTER_EKS_KUBECTL_DOWNLOAD_URL
    value: https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/kubectl
  - name: AWS_K8S_TESTER_EKS_KUBECTL_DOWNLOAD_PATH
    value: /tmp/aws-k8s-tester/kubectl
  # URL to download 'aws-iam-authenticator', required for 'kubectl' calls to EKS
  - name: AWS_K8S_TESTER_EKS_AWS_IAM_AUTHENTICATOR_DOWNLOAD_URL
    value: https://amazon-eks.s3-us-west-2.amazonaws.com/1.10.3/2018-07-26/bin/linux/amd64/aws-iam-authenticator
  - name: AWS_K8S_TESTER_EKS_AWS_IAM_AUTHENTICATOR_DOWNLOAD_PATH
    value: /tmp/aws-k8s-tester/aws-iam-authenticator
  # test mode is either "embedded" or "aws-cli" ("embedded" uses native AWS Go client, "aws-cli" will use 'aws')
  - name: AWS_K8S_TESTER_EKS_TEST_MODE
    value: "embedded"
  # configure EKS Kubernetes version
  - name: AWS_K8S_TESTER_EKS_KUBERNETES_VERSION
    value: "1.10"
  # duration to wait before destroying EKS cluster, useful to add wait time before collecting AWS ALB access logs
  - name: AWS_K8S_TESTER_EKS_WAIT_BEFORE_DOWN
    value: 1m0s
  # 'true' to destroying all AWS resources when it calls "Down"
  - name: AWS_K8S_TESTER_EKS_DOWN
    value: "true"
  # 'true' to assign worker nodes across all available subnets
  - name: AWS_K8S_TESTER_EKS_ENABLE_WORKER_NODE_HA
    value: "true"
  # 'true' to open port 22 in security group, and enable SSH for log dumper
  - name: AWS_K8S_TESTER_EKS_ENABLE_NODE_SSH
    value: "true"
  # 'true' to enable S3 Access Logs and AWS ALB Access Logs
  # use it for debug, dump cluster log already handles log artifacts
  - name: AWS_K8S_TESTER_EKS_LOG_ACCESS
    value: "false"
  # 'true' to upload 'aws-k8s-tester' logs to S3 buckets, in addition to log dumper
  # use it for debug, dump cluster log already handles log artifacts
  - name: AWS_K8S_TESTER_EKS_UPLOAD_TESTER_LOGS
    value: "false"
  # 'true' to upload worker node logs to S3, in addition to log dumper
  # use it for debug, dump cluster log already handles worker node logs
  - name: AWS_K8S_TESTER_EKS_UPLOAD_WORKER_NODE_LOGS
    value: "false"
  # Amazon EKS-optimized AMI (non-GPU, https://docs.aws.amazon.com/eks/latest/userguide/getting-started.html)
  - name: AWS_K8S_TESTER_EKS_WORKER_NODE_AMI
    value: ami-0f54a2f7d2e9c88b3
  # worker node EC2 instance type
  - name: AWS_K8S_TESTER_EKS_WORKER_NODE_INSTANCE_TYPE
    value: m3.xlarge
  # worker node auto-scaling group minimum number of nodes
  - name: AWS_K8S_TESTER_EKS_WORKER_NODE_ASG_MIN
    value: "1"
  # worker node auto-scaling group maximum number of nodes
  - name: AWS_K8S_TESTER_EKS_WORKER_NODE_ASG_MAX
    value: "1"
  # 'true' to enable debug level logs
  - name: AWS_K8S_TESTER_EKS_LOG_DEBUG
    value: "false"
  # 'true' to create AWS ALB
  - name: AWS_K8S_TESTER_EKS_ALB_ENABLE
    value: "false"
  # AWS test account credential mounted path, required for AWS API call
  - name: AWS_SHARED_CREDENTIALS_FILE
    value: /etc/eks-aws-credentials/eks-aws-credentials
  labels:
    preset-ci-kubernetes-e2e-aws-eks-1-10: "true"
  volumeMounts:
  - mountPath: /etc/eks-aws-credentials
    name: eks-aws-credentials
    readOnly: true
  volumes:
  - name: eks-aws-credentials
    secret:
      secretName: eks-aws-credentials

periodics:
# Run Kubernetes 1.10 branch e2e tests with EKS prod build 1.10
- interval: 2h
  name: ci-kubernetes-e2e-1-10-aws-eks-1-10-prod
  labels:
    preset-service-account: "true"
    preset-ci-kubernetes-e2e-aws-eks-1-10: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --timeout=200
      - --bare
      - --scenario=kubernetes_e2e
      - --
      - --check-version-skew=false
      - --deployment=eks
      - --provider=eks
      - --gce-ssh=
      - --extract=ci/latest-1.10
      - --ginkgo-parallel=30
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=180m

# Run Kubernetes 1.10 branch e2e tests with EKS prod build 1.10
# run conformance tests
- interval: 2h
  name: ci-kubernetes-e2e-1-10-aws-eks-1-10-prod-conformance
  labels:
    preset-service-account: "true"
    preset-ci-kubernetes-e2e-aws-eks-1-10: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --timeout=200
      - --bare
      - --scenario=kubernetes_e2e
      - --
      - --check-version-skew=false
      - --deployment=eks
      - --provider=eks
      - --gce-ssh=
      - --extract=ci/latest-1.10
      - --ginkgo-parallel=30
      - --test_args=--ginkgo.focus=\[Conformance\] --ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=180m

# Run Kubernetes stable e2e tests with EKS prod build 1.10
- interval: 2h
  name: ci-kubernetes-e2e-stable-aws-eks-1-10-prod
  labels:
    preset-service-account: "true"
    preset-ci-kubernetes-e2e-aws-eks-1-10: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --timeout=200
      - --bare
      - --scenario=kubernetes_e2e
      - --
      - --check-version-skew=false
      - --deployment=eks
      - --provider=eks
      - --gce-ssh=
      - --extract=ci/k8s-stable1
      - --ginkgo-parallel=30
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=180m

# Run Kubernetes latest e2e tests with EKS prod build 1.10
- interval: 2h
  name: ci-kubernetes-e2e-latest-aws-eks-1-10-prod
  labels:
    preset-service-account: "true"
    preset-ci-kubernetes-e2e-aws-eks-1-10: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --timeout=200
      - --bare
      - --scenario=kubernetes_e2e
      - --
      - --check-version-skew=false
      - --deployment=eks
      - --provider=eks
      - --gce-ssh=
      - --extract=ci/latest
      - --ginkgo-parallel=30
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] --minStartupPods=8
      - --timeout=180m
